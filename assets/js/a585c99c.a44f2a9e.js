"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},o="Integration Guide for Validator",l={unversionedId:"mev/validator-integration",id:"mev/validator-integration",title:"Integration Guide for Validator",description:"Decison Make",source:"@site/docs/mev/validator-integration.md",sourceDirName:"mev",slug:"/mev/validator-integration",permalink:"/docs/mev/validator-integration",draft:!1,editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/mev/validator-integration.md",tags:[],version:"current",frontMatter:{},sidebar:"bscSideBar",previous:{title:"Overview",permalink:"/docs/mev/overview"},next:{title:"Integration Guide for Builder",permalink:"/docs/mev/builder-integration"}},s={},c=[{value:"Decison Make",id:"decison-make",level:2},{value:"Validator Topology",id:"validator-topology",level:2},{value:"Preparation",id:"preparation",level:2},{value:"Quick Setup",id:"quick-setup",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...i}=e;return(0,a.kt)(d,(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"integration-guide-for-validator"},"Integration Guide for Validator"),(0,a.kt)("h2",{id:"decison-make"},"Decison Make"),(0,a.kt)("p",null,"When activating MEV functionality, validators encounter a mix of\nopportunities and challenges. Before enabling this feature, validators\nneed to carefully evaluate these risk accordingly:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"More maintenance work. Apart from the validator, additional\nmaintenance of the Sentry service and its related network\ncomponents is required.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Network risk. Due to Sentry service being exposed to the public\nnetwork, it is inevitably susceptible to possible network attacks.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Financial risk. Validators need to pay fees to builders, securely\nmanaging accounts is a crucial topic."))),(0,a.kt)("p",null,"After identifying these risks, let's begin the journey."),(0,a.kt)("h2",{id:"validator-topology"},"Validator Topology"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Validator Topology",src:n(54644).Z,width:"796",height:"300"})),(0,a.kt)("p",null,"It is suggested that to split the internal network into two part:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Private network. The private network is isolated from the public\nnetwork. All access to components within this network is strictly\nrestricted. The Validator and Payment wallet are expected to be\ndeployed within a private network environment.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Nat network. The components in this network can communicate with the\npublic internet under certain constraints, and the communication\ncan be established through load balancers provided by various\ncloud platforms. Sentry service should be deployed within a NAT\nnetwork environment. It is essential to configure appropriate\nsafeguards on the network gateway to prevent DoS attacks and other\npotential threats."))),(0,a.kt)("h2",{id:"preparation"},"Preparation"),(0,a.kt)("p",null,"The BNB Chain community has maintained an open-source version of the\nSentry service. You can clone the code repository from\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-mev-sentry"},"here"),"."),(0,a.kt)("p",null,"Before actually deploying the Sentry service, it is crucial to carefully\nconsider and determine several key parameters:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"BidFeeCeil.")," This represents the maximum fee that a validator is\nwilling to pay for a block proposed by a builder. When this value\nis 0, it signifies that the validator does not accept any charges\nfrom the builder.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"BidSimulationLeftOver.")," This parameter indicates how long before\nthe block time the validator should cease simulating the blocks\nfrom the builder. It is generally advisable to set it to a few\ntens of milliseconds. Setting it too small may result in blocks\nbeing broadcast too late and subsequently discarded during network\ncongestion."))),(0,a.kt)("p",null,"It is suggested that to purchase a domain that is related to the moniker\nname of the validator. The builders will send requests through this\ndomain. A BSC account should be created in advance as the payment\naccount. No BNB is required in that account if ",(0,a.kt)("strong",{parentName:"p"},"BidFeeCeil")," is zero,\notherwise, it needs to be ensured that there is enough balance in the\naccount."),(0,a.kt)("p",null,"Go to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-mev-info"},"bsc-mev-info"),"\nrepo to find more information about running builders which will be used\nduring setup."),(0,a.kt)("h2",{id:"quick-setup"},"Quick Setup"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1"),": ",(0,a.kt)("strong",{parentName:"p"},"Setup Sentry.")),(0,a.kt)("p",null,"Deploy the sentry service according to the readme of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-mev-sentry"},"sentry repo"),"."),(0,a.kt)("p",null,"Here are a few key points to highlight."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"One sentry service can manage multiple validators.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("strong",{parentName:"p"},"PrivateURL")," of validator is used by the sentry to access the\nvalidator, it can be IP:Port or internal domain URL.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The ",(0,a.kt)("strong",{parentName:"p"},"PublicHostName")," of validator is used by the builder to access\nthe validator, the sentry will forward to different validators\naccording to different hostname of the request.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For each Builder, define its Address and public URL. The address\nwill be used to authorize the identity of builders."))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2: Change the Config of Validator.")),(0,a.kt)("p",null,"Upgrade the validators to version v1.4.x or later, add a few new\nsections in the config.toml. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'  [Eth.Miner.Mev]\n  Enabled = true # open bid receiving\n  ValidatorCommission = 100 # validator claim 1% from block reward\n  BidSimulationLeftOver = 50000000 # 50ms, the time left for bid simulation\n  SentryURL = "http://bsc-mev-sentry.io" # it is used for the validator to access the sentry, it should be a private URL or IP:Port.\n\n  [[Eth.Miner.Mev.Builders]]\n  Address = "0x45EbEBe8...664D59c12" # builder address which validator is willing to receive bid from\n\n  [[Eth.Miner.Mev.Builders]]\n  Address = "0x980A75eC...fc9b863D5" # builder address which validator is willing to receive bid from\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3: Publish information")),(0,a.kt)("p",null,"It is highly recommended to publish information in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-mev-info"},"bsc-mev-info"),"\nso other builders can find it."))}u.isMDXComponent=!0},54644:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/mev-topology-ae94d4ca17a52e197c95c88206eecd39.png"}}]);