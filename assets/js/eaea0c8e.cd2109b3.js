"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[5456],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),h=o,u=p["".concat(l,".").concat(h)]||p[h]||m[h]||r;return n?a.createElement(u,s(s({ref:t},c),{},{components:n})):a.createElement(u,s({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},63326:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={sidebar_label:"BNB Smart Chain Full Node",hide_table_of_contents:!1,sidebar_position:2},s="How to Run A Fullnode on BNB Smart Chain",i={unversionedId:"validator/fullnode",id:"validator/fullnode",title:"How to Run A Fullnode on BNB Smart Chain",description:"Fullnodes Functions",source:"@site/docs/validator/fullnode.md",sourceDirName:"validator",slug:"/validator/fullnode",permalink:"/docs/validator/fullnode",draft:!1,editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/validator/fullnode.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"BNB Smart Chain Full Node",hide_table_of_contents:!1,sidebar_position:2},sidebar:"bscSideBar",previous:{title:"BNB Smart Chain (BSC) Node Configuration: Best Practices",permalink:"/docs/validator/best-practice"},next:{title:"BNB Smart Chain Fast Node",permalink:"/docs/BSC-fast-node"}},l={},d=[{value:"Fullnodes Functions",id:"fullnodes-functions",level:2},{value:"Supported Platforms",id:"supported-platforms",level:2},{value:"Steps to Run a Fullnode",id:"steps-to-run-a-fullnode",level:2},{value:"Sync From Snapshot (Recommended)",id:"sync-from-snapshot-recommended",level:3},{value:"Sync From Genesis Block (Not Recommended)",id:"sync-from-genesis-block-not-recommended",level:3},{value:"Sync Mode",id:"sync-mode",level:2},{value:"Local Private Network",id:"local-private-network",level:2},{value:"Node Maintenance",id:"node-maintenance",level:2},{value:"Upgrade Geth",id:"upgrade-geth",level:2}],c={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-run-a-fullnode-on-bnb-smart-chain"},"How to Run A Fullnode on BNB Smart Chain"),(0,o.kt)("h2",{id:"fullnodes-functions"},"Fullnodes Functions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Stores the full blockchain history on disk and can answer the data request from the network."),(0,o.kt)("li",{parentName:"ul"},"Receives and validates the new blocks and transactions."),(0,o.kt)("li",{parentName:"ul"},"Verifies the states of every account.")),(0,o.kt)("h2",{id:"supported-platforms"},"Supported Platforms"),(0,o.kt)("p",null,"We support running a full node on ",(0,o.kt)("strong",{parentName:"p"},"Mac OS X"),", ",(0,o.kt)("strong",{parentName:"p"},"Linux"),", and ",(0,o.kt)("strong",{parentName:"p"},"Windows"),"."),(0,o.kt)("h2",{id:"steps-to-run-a-fullnode"},"Steps to Run a Fullnode"),(0,o.kt)("h3",{id:"sync-from-snapshot-recommended"},"Sync From Snapshot (Recommended)"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Download the pre-build binaries from the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/bsc/releases/latest"},"release page")," or follow the instructions below")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Linux\nwget   $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep geth_linux |cut -d\\" -f4)\nmv geth_linux geth\nchmod -v u+x geth\n\n# MacOS\nwget   $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep geth_mac |cut -d\\" -f4)\nmv geth_mac geth\nchmod -v u+x geth\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Download the config files")),(0,o.kt)("p",null,"Download ",(0,o.kt)("strong",{parentName:"p"},"genesis.json")," and ",(0,o.kt)("strong",{parentName:"p"},"config.toml")," by:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# mainnet\nwget   $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep mainnet |cut -d\\" -f4)\nunzip mainnet.zip\n\n# testnet\nwget   $(curl -s https://api.github.com/repos/bnb-chain/bsc/releases/latest |grep browser_ |grep testnet |cut -d\\" -f4)\nunzip testnet.zip\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Download snapshot")),(0,o.kt)("p",null,"Download latest chaindata snapshot from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-snapshots"},"here"),". Follow the guide to structure your files."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Your --datadir flag should point to the folder where the extracted snapshot data is.\nIn our case, we created a new folder named ",(0,o.kt)("inlineCode",{parentName:"p"},"node"),", and we moved the extracted snapshot data to this folder."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"mv server/data-seed/geth/chaindata node/geth/chaindata\nmv server/data-seed/geth/chaindata node/geth/triecache\n"))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Start a full node")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Make sure you use the version of geth you downloaded with wget above, and not your local installation of geth, which might be the wrong version.")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"Since ",(0,o.kt)("inlineCode",{parentName:"li"},"v1.3.1"),", the flags ",(0,o.kt)("inlineCode",{parentName:"li"},"--txlookuplimit")," has been replaced by ",(0,o.kt)("inlineCode",{parentName:"li"},"--history.transactions"),". Make sure you no longer use ",(0,o.kt)("inlineCode",{parentName:"li"},"--txlookuplimit"),", otherwise, node may not start."),(0,o.kt)("li",{parentName:"ol"},"For all geth nodes, DO NOT use ",(0,o.kt)("inlineCode",{parentName:"li"},"-pipecommit")," flag")),(0,o.kt)("p",{parentName:"admonition"},"Note: Please refer this docs: ",(0,o.kt)("a",{parentName:"p",href:"https://www.bnbchain.org/en/blog/hotfix-hardfork-for-bsc-testnet-and-mainnet"},"https://www.bnbchain.org/en/blog/hotfix-hardfork-for-bsc-testnet-and-mainnet")," for more details.")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"It is recommended to run a fast node, which is a full node with the flag ",(0,o.kt)("inlineCode",{parentName:"p"},"--tries-verify-mode none")," set if you want high performance and care little about state consistency.\nCheck ",(0,o.kt)("a",{parentName:"p",href:"/docs/BSC-fast-node"},"here")," for full details on running a fast node.  "),(0,o.kt)("p",{parentName:"admonition"},"It will run with Hash-Base Storage Scheme by default"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0 --tries-verify-mode none\n")),(0,o.kt)("p",{parentName:"admonition"},"It will run with Path-Base Storage Scheme.",(0,o.kt)("br",{parentName:"p"}),"\n","It will enable inline state prune, keeping the latest 90000 blocks' history state by default."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0 --tries-verify-mode none --state.scheme path\n"))),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Monitor node status")),(0,o.kt)("p",null,"You can monitor the log from ",(0,o.kt)("strong",{parentName:"p"},"./node/bsc.log")," by default. When your node has started syncing, you should be able to see the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'t=2022-09-08T13:00:27+0000 lvl=info msg="Imported new chain segment"             blocks=1    txs=177   mgas=17.317   elapsed=31.131ms    mgasps=556.259  number=21,153,429 hash=0x42e6b54ba7106387f0650defc62c9ace3160b427702dab7bd1c5abb83a32d8db dirty="0.00 B"\nt=2022-09-08T13:00:29+0000 lvl=info msg="Imported new chain segment"             blocks=1    txs=251   mgas=39.638   elapsed=68.827ms    mgasps=575.900  number=21,153,430 hash=0xa3397b273b31b013e43487689782f20c03f47525b4cd4107c1715af45a88796e dirty="0.00 B"\nt=2022-09-08T13:00:33+0000 lvl=info msg="Imported new chain segment"             blocks=1    txs=197   mgas=19.364   elapsed=34.663ms    mgasps=558.632  number=21,153,431 hash=0x0c7872b698f28cb5c36a8a3e1e315b1d31bda6109b15467a9735a12380e2ad14 dirty="0.00 B"\n')),(0,o.kt)("h3",{id:"sync-from-genesis-block-not-recommended"},"Sync From Genesis Block (Not Recommended)"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"It is recommended to use HBSS with level DB for archive node, PBSS for archive node is not supported yet.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"To sync from genesis block, you would need a more powerful hardware. Server should at least have 40k IOPS and be at least an i3/i3en series server.  "),(0,o.kt)("p",{parentName:"admonition"},"If you can not download the chaindata snapshot and want to sync from genesis, then you have to generate the genesis block first, for which you have already downloaded the genesis.json in the Step - 2 above where you have downloaded config files.")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Write genesis state locally")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"## It will init genesis with Hash-Base Storage Scheme by default.\n./geth --datadir ./node init ./genesis.json\n")),(0,o.kt)("p",null,"You could see the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"INFO [05-19|14:53:17.468] Allocated cache and file handles         database=/Users/huangsuyu/Downloads/bsc/node/geth/chaindata cache=16.00MiB handles=16\nINFO [05-19|14:53:17.498] Writing custom genesis block\nINFO [05-19|14:53:17.501] Persisted trie from memory database      nodes=21 size=56.84KiB time=357.915\xb5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=-574.00B\nINFO [05-19|14:53:17.502] Successfully wrote genesis state         database=chaindata hash=7d79cc\u2026fb0d1e\nINFO [05-19|14:53:17.503] Allocated cache and file handles         database=/Users/huangsuyu/Downloads/bsc/node/geth/lightchaindata cache=16.00MiB handles=16\nINFO [05-19|14:53:17.524] Writing custom genesis block\nINFO [05-19|14:53:17.525] Persisted trie from memory database      nodes=21 size=56.84KiB time=638.396\xb5s gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=-574.00B\nINFO [05-19|14:53:17.528] Successfully wrote genesis state         database=lightchaindata hash=7d79cc\u2026fb0d1e\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Start fullnode")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"## start a full node\n./geth --config ./config.toml --datadir ./node  --cache 8000 --rpc.allow-unprotected-txs --history.transactions 0\n")),(0,o.kt)("h2",{id:"sync-mode"},"Sync Mode"),(0,o.kt)("p",null,"There are two sync modes for running a full node: ",(0,o.kt)("strong",{parentName:"p"},"snap")," and ",(0,o.kt)("strong",{parentName:"p"},"full")," which can be specified by flag ",(0,o.kt)("strong",{parentName:"p"},"--syncmode"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"snap")," sync mode is used for initial sync, which will download the latest states rather than execute the blocks from the genesis. When the initial sync is done, it will switch to full sync automatically."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"full")," sync mode can also be used to do initial sync, which will execute all the blocks since genesis. But it is ",(0,o.kt)("strong",{parentName:"p"},"not recommended"),", since the amount of historical data is too large. Instead, you can download a snapshot from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/bsc-snapshots"},"official repo")," and start full sync from the snapshot."),(0,o.kt)("p",null,"If the flag ",(0,o.kt)("strong",{parentName:"p"},"--syncmode")," is not provided, the default sync mode will depend on the state of the data folder. It will be ",(0,o.kt)("strong",{parentName:"p"},"snap")," mode if you sync from genesis or ",(0,o.kt)("strong",{parentName:"p"},"full")," mode if you start from a snapshot."),(0,o.kt)("h2",{id:"local-private-network"},"Local Private Network"),(0,o.kt)("p",null,"Please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/node-deploy"},"BSC-Deploy Tools")," to setup a local private network."),(0,o.kt)("h2",{id:"node-maintenance"},"Node Maintenance"),(0,o.kt)("p",null,"Please read ",(0,o.kt)("a",{parentName:"p",href:"/docs/validator/node-maintenance"},"this guide")),(0,o.kt)("h2",{id:"upgrade-geth"},"Upgrade Geth"),(0,o.kt)("p",null,"Please read ",(0,o.kt)("a",{parentName:"p",href:"/docs/upgrade-fullnode"},"this guide")))}m.isMDXComponent=!0}}]);