"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[4039],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=i,m=d["".concat(l,".").concat(u)]||d[u]||p[u]||r;return n?a.createElement(m,o(o({ref:t},h),{},{components:n})):a.createElement(m,o({ref:t},h))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},91760:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const r={},o="Slash",s={unversionedId:"bcfusion/validators/slash",id:"bcfusion/validators/slash",title:"Slash",description:"The BNB smart chain (BSC) is a blockchain network that aims to provide fast, secure, and reliable transactions. To",source:"@site/docs/bcfusion/validators/slash.md",sourceDirName:"bcfusion/validators",slug:"/bcfusion/validators/slash",permalink:"/docs/bcfusion/validators/slash",draft:!1,editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/bcfusion/validators/slash.md",tags:[],version:"current",frontMatter:{},sidebar:"bscSideBar",previous:{title:"Staking",permalink:"/docs/bcfusion/validators/staking"},next:{title:"Governance",permalink:"/docs/bcfusion/validators/gov"}},l={},c=[{value:"Downtime Slash",id:"downtime-slash",level:2},{value:"Double Sign Slash",id:"double-sign-slash",level:2},{value:"Malicious Vote Slash",id:"malicious-vote-slash",level:2}],h={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"slash"},"Slash"),(0,i.kt)("p",null,"The BNB smart chain (BSC) is a blockchain network that aims to provide fast, secure, and reliable transactions. To\nachieve this, the BSC relies on a set of validators who are responsible for producing and validating blocks. Validators\nstake their BNB tokens to participate in the network and earn rewards."),(0,i.kt)("p",null,"However, validators also face the risk of losing their stakes if they behave in ways that could harm the network's\nintegrity and reliability. This is where the slashing mechanism comes in. The slashing mechanism is a set of rules and\nfunctions implemented in the ",(0,i.kt)("inlineCode",{parentName:"p"},"SlashIndicator")," contract\n(which is a system contract and the address is ",(0,i.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000001001"),")\nthat penalizes validators for violating certain conditions. The ",(0,i.kt)("inlineCode",{parentName:"p"},"SlashIndicator")," contract will also calls\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"StakeHub")," contract,\nanother system contract with address ",(0,i.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000002002"),", for slashing."),(0,i.kt)("p",null,"The slashing mechanism covers three types of offenses: downtime, double signing, and malicious voting. Each offense has\na different severity and penalty, depending on the impact it has on the network. In this document, we will explain the\nslashing conditions and mechanisms for each offense in detail."),(0,i.kt)("h2",{id:"downtime-slash"},"Downtime Slash"),(0,i.kt)("p",null,"Validators are expected to maintain high availability to ensure the network's smooth operation. Validators failing to\nmeet these uptime requirements are subject to slashing."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A internal contract tracks validator uptime by measuring the number of blocks they sign within a certain window."),(0,i.kt)("li",{parentName:"ul"},'If a validator fails to sign at least a minimum number of blocks within the window, they are considered offline and\nwill be slashed for 10BNB and be moved to a "jailed" state for 2 days.')),(0,i.kt)("h2",{id:"double-sign-slash"},"Double Sign Slash"),(0,i.kt)("p",null,"A critical offense within the BSC network is when a validator signs two different blocks at the same height. Such\nactions can lead to network forks, undermining the blockchain's security and consistency.\nAnyone can send a ",(0,i.kt)("inlineCode",{parentName:"p"},"submitDoubleSignEvidence")," transaction to the ",(0,i.kt)("inlineCode",{parentName:"p"},"SlashIndicator")," contract,\nspecifying the following information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Header 1"),": A header of BSC with a the validator's signed signature.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Header 2"),": Another header of BSC signed by the validator. The two headers have the same height.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The off-chain services monitor for double signing by validators by comparing the signatures and hashes of the blocks\nthey sign.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'If a validator is caught double signing, the contract executes a slashing function, reducing the validator\'s stake for\n200BNB and moving them to a "jailed" state for 30 days, preventing them from participating in consensus until manual\nintervention is taken.'))),(0,i.kt)("h2",{id:"malicious-vote-slash"},"Malicious Vote Slash"),(0,i.kt)("p",null,"Validators who violates the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/BEPs/blob/master/BEPs/BEP126.md"},"fast finality vote rules"),"\nwill be also slashed.\nAnyone can send a ",(0,i.kt)("inlineCode",{parentName:"p"},"submitFinalityViolationEvidence")," transaction to the ",(0,i.kt)("inlineCode",{parentName:"p"},"SlashIndicator")," contract,\nspecifying the following information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Evidence"),": The evidence proves the valiator violates the fast finality rules.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The off-chain services monitor fast finality vote data to identify malicious votes.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'If a validator is caught for malicious vote, the validator will be slashed for 200BNB and move to "jailed" status for\n30 days.'))))}p.isMDXComponent=!0}}]);